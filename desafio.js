//1. Cria√ß√£o das vari√°veis principais
let nome = "Morgana";
let classe = "Bruxa";
let nivel = 20;
let vida = 5;
let ouro = 10;
let xp = 40;

//2. Defini√ß√£o de constantes m√°gicas
let nomeArma = "varinhaMagica";
let danoBase = 20;
let nomeArmadura = "capaPeleCobra";
let defesaBase = 10;

console.log(`Arma: ${nomeArma}`);
console.log(`Dano base: ${danoBase}`);
console.log(`Nome armadura: ${nomeArmadura}`);
console.log(`Defesa base: ${defesaBase}`);

//3.Aplica√ß√£o de operadores de atribui√ß√£o
//  Valores base
let xpBonus = (xp += 150);
let ouroBonus = (ouro -= 30);
let vidaBonus = (vida += 40);
let varinhaMagica = (danoBase *= 20);

//4.C√°lculo de atributos finais
ataqueTotal = nivel + danoBase;
defesaTotal = defesaBase + nivel / 2;

//5. Avalia√ß√£o da prontid√£o com operadores l√≥gicos
let vidaSuficiente = vida > 70;
let ataqueForte = ataqueTotal > 60;
let nivelAvancado = nivel >= 10;
let podeEnfrentarGuardiao = vidaSuficiente && (ataqueForte || nivelAvancado);

//6. Gera√ß√£o da lore do personagem
console.log("Lore da bruxa: Morgana");
console.log(
  "Morgana √© uma bruxa muito poderosa, tem como arma sua varinha m√°gica e usa sua armadura de pele de cobra"
);
console.log(
  "Morgana com sua experi√™ncia obteve mais 150 pontos bonus de xp e comprou mais 30 moedas de ouro ficando com 40 moedas,"
);
console.log(
  "Oba! Morgana lutou com um mago e venceu, recuperou 40 pontos de vida"
);
console.log(
  "A bruxa levou um golpe surpresa do mago e obteve 20 pontos de dano"
);

//Desafio parte 2
console.log("-------------------------------------");

//1.Resgate do n√≠vel um

let nomePersonagem = "Morgana";
let classeNivelUm = "Bruxa";
let vidaAtual = 100;
let vidaMaxima = 50;
let nivel1 = 2;
let experiencia = 0;
let dinheiro = 100;

//novos atributos para a batalha
let forca = 15;
let defesa = 10;
let agilidade = 12;
let combatesVencidos = 0;

//Estado atual da hist√≥ria
let localAtual = "golpe surpresa";
let missaoAtual = "combate com mago";

//2. Estrutura narrativa obrigat√≥ria

if (vidaAtual >= 100) {
  console.log("Morgana lutou com o mago");
}

if (forca >= 15) {
  console.log("Morgana venceu a batalha");
} else {
  console.log("Morgana perdeu a batalha");
}

if (forca >= 15) {
  console.log(
    "A bruxa Morgana lan√ßou um feiti√ßo surpresa e fez o mago perder algumas vidas "
  );
} else if (forca < 15) {
  console.log(
    "O mago fez a bruxa perder todas as suas for√ßas com uma pancada na cabe√ßa "
  );
}

//3. Condicionais simples- a primeira decis√£o

// CAP√çTULO 1: Condicionais Simples na narrativa
console.log(" CAP√çTULO 1: A volta da bruxa ansi√£");

// Verifica√ß√£o baseada no n√≠vel do personagem
if (nivel1 < 3) {
  console.log(
    " A bruxa ansi√£ diz: 'Voc√™ √© muito imatura, a nossa conven√ß√£o est√° apontada com voc√™!'"
  );
  console.log("Mas " + nomePersonagem + " decide prosseguir mesmo assim...");
}

// Verifica√ß√£o de recursos especiais
if (ouro >= 100) {
  console.log(" Suas moedas s√£o reluzentes, atraindo olhares cobi√ßosos...");
}

// Verifica√ß√£o de classe espec√≠fica
if (classe === "Morgana") {
  console.log(" A energia m√°gica flui atrav√©s de suas veias...");
}

//4. Condicionais compostas- escolhas estrat√©gicas


// CAP√çTULO 2: Escolha Estrat√©gica
console.log("CAP√çTULO 2: A m√°gica do Destino");

// Escolha baseada em recursos
if (dinheiro >= 50) {
  console.log(
    "Com dinheiro o suficiente, Morgana pode comprar uma varinha melhor"
  );
  forca += 5;
  defesa += 3;
  dinheiro -= 50;
  console.log("For√ßa e defesa aumentaram! Dinheiro restante:" + dinheiro);
} else {
  console.log(
    "Sem dinheiro suficiente," +
      Morgana +
      "Deve confiar apenas em seus feiti√ßos!"
  );
  console.log("Confie em sua agilidade! Agilidade  + 2");
  agilidade += 2;
}

// Sistema de recompensas narrativo
if (experiencia >= 100) {
  console.log(
    " A sabedoria acumulada se manifesta! " +
      Morgana +
      " sente-se mais poderosa!"
  );
  nivel++;
  experiencia = 0;
  vidaAtual = vidaMaxima; // Vida restaurada
} else {
  console.log(
    "" + nomePersonagem + " ainda busca mais conhecimento e experi√™ncia..."
  );
  console.log("Sabedoria atual: " + experiencia + "/100");
}

//5. Condicionais encadeadas - t√°ticas avan√ßadas
// CAP√çTULO 3: A Batalha Decisiva
console.log(" CAP√çTULO 3: A Batalha Decisiva (O jogo de feiti√ßos)");
let poderInimigo = 50;

// Sistema de combate inteligente baseado na situa√ß√£o
if (vidaAtual <= 30) {
  console.log(
    " Com pouca vida e j√° sem for√ßas, " +
      Morgana +
      " usa de um feiti√ßo surpresa!"
  );
  console.log("Ataque final com toda o feiti√ßo restante!");
  poderInimigo -= forca * 2;
} else if (vidaAtual >= 30 && classe === "Mago") {
  console.log(" " + Morgana + " canaliza todo seu poder m√°gico!");
  console.log("Feiti√ßo Incr√≠vel e aniquilador !");
  poderInimigo -= forca + 20;
  manaAtual -= 30;
} else if (agilidade >= 15) {
  console.log("Com grande estrat√©gia, lan√ßa um feiti√ßo certeiro!");
  poderInimigo -= forca;
} else {
  console.log(" Luta de poderes defensiva e calculada!");
  poderInimigo -= forca / 2;
  vidaAtual += 10; // Recupera um pouco de vida
}

//6.Exemplo de implementa√ß√£o narrativa completa
console.log(" === CONTINUA√á√ÉO DA JORNADA DE Morgana ===");
console.log("");

// PR√ìLOGO - Conex√£o com o N√≠vel 1
console.log("Ap√≥s os eventos do "  +localAtual+ " a bruxa Morgana ");
console.log("da classe " + classe + " se depara com um novo desafio...");
console.log("O novo desafio de Morgana seria derrotar o mago com um feiti√ßo surpresa");
console.log("Ela se depara com o mago, j√° cansado, mas contando vit√≥ria ");
console.log("Depois de um tempo... CABUM!! Morgana lan√ßa um feiti√ßo inesperado e acaba com o mago")

// [Aqui voc√™ implementa os 3 cap√≠tulos com os conceitos das etapas anteriores]g

// EP√çLOGO - Resultado final
if (poderInimigo <= 0) {
  console.log(
    " VIT√ìRIA √âPICA! Morgana Vence a batalha e o jogo de poderes!"
  );
  experiencia += 100;
  combatesVencidos++;
  console.log("A Maior bruxa de todas, √©pica Morgana cresce...");
} else {
  console.log(
    "A batalha muitas vezes n√£o foi f√°cil, mas Morgana sobrevive para lutar outro dia, vivemos os dias de luta para aproveitar a gl√≥ria!"
  );
}

console.log("");
console.log("FIM DO CAP√çTULO - Essa batalha, nossa bruxa venceu, mas ser√° que a guerra tamb√©m ser√° de gl√≥ria ?!");

// Desafio parte 3
console.log
  ("-------------------------------------");


// 1. Resgate da saga anterior

// === CONTINUA√á√ÉO DA SAGA √âPICA - N√çVEL 3 ===
// Mantenha seu personagem dos n√≠veis anteriores e adicione:

let nomePersonagem = Morgana;
let classe = Bruxa;
let nivel = 3; // Evoluiu ap√≥s as batalhas anteriores!
let vidaAtual = 120;
let vidaMaxima = 120;
let experiencia = 200;
let ouro = 150;

// === NOVOS ELEMENTOS PARA O CASTELO DOS ARRAYS ===
// Invent√°rio m√°gico - primeira cole√ß√£o arcana
let inventario = ["Po√ß√£o de Vida", "Glacium", "Aqualis"];
let aliados = ["Slade", "Guerreira Luna", "Raelion"];
let inimigosEncontrados = ["Sir Dareth", "Ravok", "Caelus"];
let salasCastelo = ["Biblioteca viventina", "Pris√£o das sombras", "Torre do Tempo"];
let tesouroColetado = [];

console.log("üè∞ === "+nomePersonagem+ "  ADENTRA O CASTELO DOS ARRAYS ===");
console.log("Ap√≥s as vit√≥rias dos n√≠veis anteriores, nossa bruxa chegou ao castelo lend√°rio...");
console.log("Invent√°rio inicial: " + inventario.length + " itens m√°gicos");

// 2. Arays- as cole√ß√µes arcanas 
// === CAP√çTULO 1: DESCOBERTA DAS COLE√á√ïES ARCANAS ===
console.log("");
console.log("üóùÔ∏è CAP√çTULO 1: Os Ba√∫s Arcanos do Castelo");

// 3.5.1. Declara√ß√£o e inicializa√ß√£o
let pocoesEncontradas = ["Sopro da tempestade", "V√©u de n√©voa", "N√©ctar de sanguessol"];
let armadilhasAtiradas = []; // Array vazio - ser√° preenchido na aventura

// 3.5.2. Acesso e modifica√ß√£o de elementos
console.log("üß™ Primeira po√ß√£o encontrada: " + pocoesEncontradas[0]);
console.log("‚öóÔ∏è Total de po√ß√µes m√°gicas: " + pocoesEncontradas.length);

// Modificando elemento espec√≠fico
inventario[0] = "Po√ß√£o de Vida Suprema"; // Upgrade da po√ß√£o!
console.log("‚ú® " + nomePersonagem + " aprimorou uma po√ß√£o!");

// 3.5.3. M√©todos de array fundamentais
inventario.push("Anel de Prote√ß√£o"); // Adiciona no final
console.log("üíç Novo item adicionado! Invent√°rio: " + inventario);

let itemRemovido = inventario.pop(); // Remove do final
console.log("üì§ Item removido: " + itemRemovido);
console.log("üéí Invent√°rio atual: " + inventario);

inventario.push("Colar bola de cristal");
console.log("Novo item adicionado! Invent√°rio:" + inventario +);

if (nivel >= 0) {
  console.log("Morgana aumentou seu n√≠vel por adicionar um novo item ao invent√°rio ");
} else {
  console.log("Morgana  continuou com o mesmo n√≠vel, pois n√£o coletou outro item");
}

//3. For loop tradicional - o ritual da repeti√ß√£o

// === CAP√çTULO 2: O RITUAL DA EXPLORA√á√ÉO ===
console.log("");
console.log("‚öîÔ∏è CAP√çTULO 2: Explorando as Masmorras Sistem√°ticas");

// Explorando cada sala do castelo usando for tradicional
console.log("üó∫Ô∏è Come√ßando explora√ß√£o das " + salasCastelo.length + " salas m√≠sticas...");

for (let i = 0; i < salasCastelo.length; i++) {
console.log("üö™ Sala " + (i + 1) + ": " + salasCastelo[i]);

// L√≥gica diferente para cada sala baseada no √≠ndice
if (i === 0) {
console.log("üìö " + nomePersonagem + " encontra coroa de ossos!");
experiencia += 50;
} else if (i === 1) {
console.log("üíé Anel do sussuro lunar pode mostrar o futuro!");
tesouroColetado.push("Cristal de Poder");
} else {
console.log("‚è∞ O tempo distorce ao redor de " + nomePersonagem + "!");
vidaAtual -= 10; // Pequeno dano temporal
}
}

console.log("üìä Explora√ß√£o completa! XP: " + experiencia + " | Vida: " + vidaAtual);


//4. Gerenciamento de aliados com for 
// === CAP√çTULO 3: A UNI√ÉO DOS ALIADOS ===
console.log("");
console.log("ü§ù CAP√çTULO 3: Reunindo os Aliados Arcanos");

// Recrutando aliados com for tradicional
console.log("üèπ " + nomePersonagem + " convoca seus aliados para a batalha final:");

for (let i = 0; i < aliados.length; i++) {
let aliado = aliados[i];
console.log("‚ö° Slad " + (i + 1) + ": " + aliado + " se junta √† miss√£o!");

// Cada posi√ß√£o no array determina habilidade especial
if (i === 0) { // Primeiro aliado - L√≠der m√°gico
console.log("üîÆ Como l√≠der m√°gico, " + aliado + " multiplica o poder da equipe!");
ouro += 50;
} else if (i === 1) { // Segundo aliado - Defensor
console.log("üõ°Ô∏è Como defensor principal, " + aliado + " fortalece a resist√™ncia!");
vidaMaxima += 30;
} else { // Demais aliados - Especialistas
console.log("üèπ Como especialista, " + aliado + " aprimora t√°ticas de combate!");
experiencia += 40;
}
}

console.log("üéñÔ∏è Equipe completa! Ouro: " + ouro + " | Vida m√°xima: " + vidaMaxima);